import os
from collections import Counter
import matplotlib.pyplot as plt
from typing import List, Dict
import json

def plot_tweets_per_language(cleaned_data: List[Dict], save_path: str):
    """Plot and save a bar chart of tweet counts per selected language, including 'Others'."""
    
    print("Starting to plot language distribution...")

    target_langs = {
        'en': ('blue', 'English'),
        'es': ('red', 'Spanish'),
        'fr': ('green', 'French'),
        'nl': ('orange', 'Dutch'),
        'de': ('purple', 'German')
    }

    lang_counter = Counter(tweet['lang'] for tweet in cleaned_data if tweet['lang'] != 'und')

    langs = []
    full_names = []
    counts = []
    colors = []

    total_others = 0
    for lang_code, count in lang_counter.items():
        if lang_code in target_langs:
            color, full_name = target_langs[lang_code]
            langs.append(lang_code)
            full_names.append(full_name)
            counts.append(count)
            colors.append(color)
        else:
            total_others += count

    if total_others > 0:
        full_names.append('Others')
        counts.append(total_others)
        colors.append('gray')

    plt.figure(figsize=(10, 6))
    bars = plt.bar(full_names, counts, color=colors)
    plt.xlabel('Language')
    plt.ylabel('Number of Tweets')
    plt.title('Number of Tweets per Language (Selected + Others)')
    plt.xticks(rotation=45)

    for bar in bars:
        height = bar.get_height()
        plt.text(bar.get_x() + bar.get_width() / 2, height + 1, str(height),
                 ha='center', va='bottom', fontsize=10)

    plt.tight_layout()
    plt.savefig(save_path)
    plt.close()
    print(f"Saved language plot to {save_path}")

# Path to the folder with the cleaned JSON files
data_folder = r"C:\Users\20244460\OneDrive - TU Eindhoven\Documents\dBL JBAG030 data\dbl cleaned data"

all_cleaned_tweets = []

# Load all JSON files that match the pattern
for filename in os.listdir(data_folder):
    if filename.startswith("cleaned_") and filename.endswith(".json"):
        file_path = os.path.join(data_folder, filename)
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                tweets = json.load(f)
                all_cleaned_tweets.extend(tweets)
        except json.JSONDecodeError:
            print(f"Skipping file due to JSON error: {filename}")
            continue

# Define output path for the plot in the desired folder
output_plot_path = r"C:\Users\20244460\OneDrive - TU Eindhoven\Documents\dBL JBAG030 data\dbl cleaned data\plots\language_distribution.png"

# Create the "plots" directory if it doesn't exist
os.makedirs(os.path.dirname(output_plot_path), exist_ok=True)

# Call the function
plot_tweets_per_language(all_cleaned_tweets, output_plot_path)
